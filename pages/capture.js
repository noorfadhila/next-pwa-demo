import React, { useEffect, useState } from 'react';
import { QrReader } from 'react-qr-reader';
import QrcodeDecoder from 'qrcode-decoder';
import { useRouter } from 'next/router'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css';
import Grid from '@material-ui/core/Grid';
import Box from '@material-ui/core/Box';
import { IconButton } from '@material-ui/core';
import { makeStyles } from '@material-ui/core/styles';
import PhotoCameraRoundedIcon from "@material-ui/icons/PhotoCameraRounded";
const classes = makeStyles((theme) => ({
  root: {
    height: "100%",
    textAlign: 'center',
  },
  imgBox: {
    maxWidth: "80%",
    maxHeight: "80%",
    margin: "10px"
  },
  img: {
    height: "150px",
    maxWidth: "150px",
  },
  input: {
    display: "none"
  },
  bordered: {
      border: "solid 1px #ccc"
  }
}));

export default function Capture() {
    const qr = new QrcodeDecoder();
    const router = useRouter();
    const [data, setData] = useState('No result');
    const [source, setSource] = useState("");
    const handleCapture = (target) => {
        if (target.files) {
          if (target.files.length !== 0) {
            const file = target.files[0];
            const newUrl = URL.createObjectURL(file);
            setSource(newUrl);
            qr.decodeFromImage(newUrl).then((res) => {
                setData(res.data)
            })
            // console.log("ABCD", result)
            // setData(result.Promise)
          }
        }
    };

    useEffect(() => {
        let host = window.location.origin
        if(data.includes(`${host}/detail`)){
            router.push(data)
        }
    }, [router, data])
    
    useEffect(() => {
        console.log(navigator.mediaDevices)
        // if (navigator.mediaDevices) {
        //     navigator.mediaDevices.getUserMedia({ video: true })
        //         .then(function (stream) {
        //             video.srcObject = stream;
        //             console.log("QWERTYUIOP")
        //         })
        //         .catch(function (err0r) {
        //             console.log("Something went wrong!");
        //         });
        // }
    }, []);

    if (router.isFallback) {
        return <div>Loading...</div>
    }
    
    return (
        <div className={styles.container}>
            <Head>
                <title>Generate Link</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className={classes.root}>
                <Grid container>
                    <Grid item xs={12}>
                    <b><h1>Capture your image</h1></b>
                    {source &&
                        <Box display="flex" justifyContent="center" border={1} className={classes.imgBox}>
                        <Image src={source} alt={"snap"} className={classes.img} width={150} height={150}></Image>
                        </Box>}
                    <input
                        accept="image/*"
                        className={classes.input}
                        id="icon-button-file"
                        type="file"
                        onChange={(e) => handleCapture(e.target)}
                    />
                    <label htmlFor="icon-button-file">
                        <IconButton
                        color="primary"
                        aria-label="upload picture"
                        component="span"
                        >
                        <PhotoCameraRoundedIcon fontSize="large" color="primary" />
                        </IconButton>
                    </label>
                    </Grid>
                </Grid>
            </div>
            <b><h1>Scan your image</h1></b>
            <QrReader
                constraints={{facingMode: 'environment'}}
                className={classes.bordered}
                showViewFinder={true}
                onResult={(result, error) => {
                if (!!result) {
                    setData(result?.text);
                }

                if (!!error) {
                    console.info(error);
                }
                }}
                style={{ width: '100%', border: "solid 1px #000" }}
            />
            <p>{data}</p>
        </div>
    )
}
